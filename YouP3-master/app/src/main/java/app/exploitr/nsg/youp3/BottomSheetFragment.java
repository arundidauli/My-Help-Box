package app.exploitr.nsg.youp3;


import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AlertDialog;

import com.google.android.material.bottomsheet.BottomSheetDialogFragment;

import java.security.SecureRandom;
import java.util.Locale;
import java.util.concurrent.TimeUnit;

import at.huber.youtubeExtractor.VideoMeta;
import at.huber.youtubeExtractor.YtFile;
import downloader.utils.Queue;
import downloader.utils.QueueObject;
import downloads.FileHolder;
import downloads.HolderObject;
import utils.Helper;

@SuppressWarnings("ConstantConditions")
public class BottomSheetFragment extends BottomSheetDialogFragment {

    private FileHolder holder;
    private VideoMeta videoMeta;
    private String youtubeUrl;

    public BottomSheetFragment() {
        // Required empty public constructor
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }

    public BottomSheetFragment prepare(VideoMeta meta, String youUrl) {
        holder = new FileHolder();
        videoMeta = meta;
        youtubeUrl = youUrl;
        return this;
    }

    public void setupDialogData(YtFile file, int type) {
        holder.add(new HolderObject().setFile(file).setType(type));
    }

    @Override
    public int getTheme() {
        return R.style.BottomSheetDialogTheme;
    }

    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        View download_sheet = inflater.inflate(R.layout.advanced_download_item, container, false);

        Button aud_64k = download_sheet.findViewById(R.id._64);
        Button aud_96k = download_sheet.findViewById(R.id._96);
        Button aud_128k = download_sheet.findViewById(R.id._128);
        Button aud_160k = download_sheet.findViewById(R.id._160);
        Button aud_192k = download_sheet.findViewById(R.id._192);

        Button vid_144p = download_sheet.findViewById(R.id._144p);
        Button vid_240p = download_sheet.findViewById(R.id._240p);
        Button vid_320p = download_sheet.findViewById(R.id._360p);
        Button vid_480p = download_sheet.findViewById(R.id._480p);
        Button vid_720p = download_sheet.findViewById(R.id._720p);
        Button vid_1080p = download_sheet.findViewById(R.id._1080p);
        Button vid_1440p = download_sheet.findViewById(R.id._1440p);
        Button vid_2160p = download_sheet.findViewById(R.id._2160p);

        Button vid_144p_silent = download_sheet.findViewById(R.id._144p_silent);
        Button vid_240p_silent = download_sheet.findViewById(R.id._240p_silent);
        Button vid_320p_silent = download_sheet.findViewById(R.id._360p_silent);
        Button vid_480p_silent = download_sheet.findViewById(R.id._480p_silent);
        Button vid_720p_silent = download_sheet.findViewById(R.id._720p_silent);
        Button vid_1080p_silent = download_sheet.findViewById(R.id._1080p_silent);
        Button vid_1440p_silent = download_sheet.findViewById(R.id._1440p_silent);
        Button vid_2160p_silent = download_sheet.findViewById(R.id._2160p_silent);

        for (HolderObject object : holder) {

            //<editor-fold desc="Audio Here :-)">
            final View.OnClickListener onClickListener = v -> ready(object.getYtFile(), object.getType());
            if (object.getType() == FileHolder.TYPE_AUDIO) {
                if (object.getYtFile().getFormat().getAudioBitrate() == 64) {
                    aud_64k.setEnabled(true);
                    aud_64k.setOnClickListener(onClickListener);
                } else if (object.getYtFile().getFormat().getAudioBitrate() == 96) {
                    aud_96k.setEnabled(true);
                    aud_96k.setOnClickListener(onClickListener);
                } else if (object.getYtFile().getFormat().getAudioBitrate() == 128) {
                    aud_128k.setEnabled(true);
                    aud_128k.setOnClickListener(onClickListener);
                } else if (object.getYtFile().getFormat().getAudioBitrate() == 160) {
                    aud_160k.setEnabled(true);
                    aud_160k.setOnClickListener(onClickListener);
                } else if (object.getYtFile().getFormat().getAudioBitrate() == 192) {
                    aud_192k.setEnabled(true);
                    aud_192k.setOnClickListener(onClickListener);
                }
            }
            //</editor-fold>

            //<editor-fold desc="Video - Normal :-)">
            if (object.getType() == FileHolder.TYPE_VIDEO) {
                if (object.getYtFile().getFormat().getHeight() == 144) {
                    vid_144p.setEnabled(true);
                    vid_144p.setOnClickListener(onClickListener);
                } else if (object.getYtFile().getFormat().getHeight() == 240) {
                    vid_240p.setEnabled(true);
                    vid_240p.setOnClickListener(onClickListener);
                } else if (object.getYtFile().getFormat().getHeight() == 360) {
                    vid_320p.setEnabled(true);
                    vid_320p.setOnClickListener(onClickListener);
                } else if (object.getYtFile().getFormat().getHeight() == 480) {
                    vid_480p.setEnabled(true);
                    vid_480p.setOnClickListener(onClickListener);
                } else if (object.getYtFile().getFormat().getHeight() == 720) {
                    vid_720p.setEnabled(true);
                    vid_720p.setOnClickListener(onClickListener);
                } else if (object.getYtFile().getFormat().getHeight() == 1080) {
                    vid_1080p.setEnabled(true);
                    vid_1080p.setOnClickListener(onClickListener);
                } else if (object.getYtFile().getFormat().getHeight() == 1440) {
                    vid_1440p.setEnabled(true);
                    vid_1440p.setOnClickListener(onClickListener);
                } else if (object.getYtFile().getFormat().getHeight() == 2160) {
                    vid_2160p.setEnabled(true);
                    vid_2160p.setOnClickListener(onClickListener);
                }
            }
            //</editor-fold">

            //<editor-fold desc="Video - Silent :-)">
            if (object.getType() == FileHolder.TYPE_VIDEO_SILENT) {
                if (object.getYtFile().getFormat().getHeight() == 144) {
                    vid_144p_silent.setEnabled(true);
                    vid_144p_silent.setOnClickListener(onClickListener);
                } else if (object.getYtFile().getFormat().getHeight() == 240) {
                    vid_240p_silent.setEnabled(true);
                    vid_240p_silent.setOnClickListener(onClickListener);
                } else if (object.getYtFile().getFormat().getHeight() == 360) {
                    vid_320p_silent.setEnabled(true);
                    vid_320p_silent.setOnClickListener(onClickListener);
                } else if (object.getYtFile().getFormat().getHeight() == 480) {
                    vid_480p_silent.setEnabled(true);
                    vid_480p_silent.setOnClickListener(onClickListener);
                } else if (object.getYtFile().getFormat().getHeight() == 720) {
                    vid_720p_silent.setEnabled(true);
                    vid_720p_silent.setOnClickListener(onClickListener);
                } else if (object.getYtFile().getFormat().getHeight() == 1080) {
                    vid_1080p_silent.setEnabled(true);
                    vid_1080p_silent.setOnClickListener(onClickListener);
                } else if (object.getYtFile().getFormat().getHeight() == 1440) {
                    vid_1440p_silent.setEnabled(true);
                    vid_1440p_silent.setOnClickListener(onClickListener);
                } else if (object.getYtFile().getFormat().getHeight() == 2160) {
                    vid_2160p_silent.setEnabled(true);
                    vid_2160p_silent.setOnClickListener(onClickListener);
                }
            }
            //</editor-fold">Ä«
        }
        return download_sheet;
    }


    private void ready(YtFile ytFile, int type) {
        new AlertDialog.Builder(getActivity())
                .setTitle("Download Information")
                .setCancelable(false)
                .setMessage(displayed(type, videoMeta))
                .setPositiveButton("Download", (dialog, which) -> {

                    View fileName = getLayoutInflater().inflate(R.layout._download_filename, null);

                    EditText file = fileName.findViewById(R.id.fileName);
                    file.setText(Helper.getFilenameFromString(videoMeta.getTitle()));
                    file.addTextChangedListener(watcher(fileName.findViewById(R.id.in_val_ch)));

                    new AlertDialog.Builder(getActivity())
                            .setView(fileName)
                            .setPositiveButton("Ok", (dialog1, which1) -> download(file.getText().toString(), ytFile))
                            .setNegativeButton("Cancel", (dialog12, which12) -> Toast.makeText(getContext(), "Download Cancelled", Toast.LENGTH_SHORT).show())
                            .show();
                })
                .setNegativeButton("Cancel", (v, x) -> v.dismiss())
                .show();
    }


    /* Converts milli time to conventional format */
    private static String getTimeStamp(long value) {
        return String.format(Locale.US, "%d hours,%d min, %d sec", TimeUnit.SECONDS.toHours(value),
                TimeUnit.SECONDS.toMinutes(value - TimeUnit.HOURS.toSeconds(TimeUnit.SECONDS.toHours(value))),
                value - (TimeUnit.MINUTES.toSeconds(
                        TimeUnit.SECONDS.toMinutes(value - TimeUnit.HOURS.toSeconds(TimeUnit.SECONDS.toHours(value)))
                ) + TimeUnit.HOURS.toSeconds(TimeUnit.SECONDS.toHours(value)))
        );
    }


    /* Warns if there is a illegal character in filename */
    private static TextWatcher watcher(View validView) {
        return new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {

            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {

            }

            @Override
            public void afterTextChanged(Editable s) {
                if (!Helper.fileNameReady(s.toString())) {
                    validView.setVisibility(View.VISIBLE);
                } else {
                    validView.setVisibility(View.INVISIBLE);
                }
            }
        };
    }

    private static String displayed(int type, VideoMeta videoMeta) {
        return "Download : " + videoMeta.getTitle() + "\n\n"
                + "Author : " + videoMeta.getAuthor() + "\n"
                + "Length : " + getTimeStamp(videoMeta.getVideoLength()) + "\n\n"
                + "Type : " + (type == FileHolder.TYPE_AUDIO ? "Audio" : "Video") +
                (type == FileHolder.TYPE_VIDEO_SILENT ? " | Silent" : "");
    }

    /* Proceed To Download */
    private void download(String fileName, YtFile ytFile) {
        if (Helper.fileNameReady(fileName)) {
            QueueObject object = new QueueObject();
            object.setId(new SecureRandom().nextInt(1024));
            object.setName(fileName);
            object.setUrl(ytFile.getUrl());
            object.setExt(ytFile.getFormat().getExt());
            object.setYtUrl(youtubeUrl);

            Queue.getInstance().add(object);
            this.dismiss();
        } else {
            Toast.makeText(getContext(), "Invalid Filename, Dont use special characters", Toast.LENGTH_SHORT).show();
        }
    }

}
