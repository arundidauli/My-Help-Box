package app.exploitr.nsg.youp3;

import android.Manifest;
import android.os.Build;
import android.os.Bundle;
import android.view.View;

import androidx.annotation.RequiresApi;

import io.github.dreierf.materialintroscreen.MaterialIntroActivity;
import io.github.dreierf.materialintroscreen.MessageButtonBehaviour;
import io.github.dreierf.materialintroscreen.SlideFragmentBuilder;

public class IntroActivity extends MaterialIntroActivity {

    private String[] perms = new String[]{
            Manifest.permission.INTERNET,
            Manifest.permission.READ_EXTERNAL_STORAGE,
            Manifest.permission.WRITE_EXTERNAL_STORAGE,
            Manifest.permission.ACCESS_NETWORK_STATE,
    };

    @RequiresApi(api = Build.VERSION_CODES.P) /*Fix Foreground Permission For Pi*/
    private String[] permsforPi = new String[]{
            Manifest.permission.INTERNET,
            Manifest.permission.READ_EXTERNAL_STORAGE,
            Manifest.permission.WRITE_EXTERNAL_STORAGE,
            Manifest.permission.ACCESS_NETWORK_STATE,
            Manifest.permission.FOREGROUND_SERVICE
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        enableLastSlideAlphaExitTransition(true);

        getBackButtonTranslationWrapper().setEnterTranslation(View::setAlpha);

        addSlide(new SlideFragmentBuilder()
                .backgroundColor(R.color.themeDef_primary)
                .buttonsColor(android.R.color.background_dark)
                .image(R.drawable.ic_launcher_web)
                .title("Download Content With Ease")
                .description("Let's have a try!")
                .build());

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {
            addSlide(new SlideFragmentBuilder()
                            .backgroundColor(R.color.themeDef_AboutActivity_primary)
                            .buttonsColor(R.color.themeDef_BookmarkActivity_accent)
                            .image(R.drawable.ic_perm_lock)
                            .possiblePermissions(permsforPi)
                            .neededPermissions(permsforPi)
                            .title("Give me permissions")
                            .description("I can't work without them")
                            .build(),
                    new MessageButtonBehaviour(v -> showMessage("Thanks! You are already done!"), "Grant Permissions"));
        } else {
            addSlide(new SlideFragmentBuilder()
                            .backgroundColor(R.color.themeDef_AboutActivity_primary)
                            .buttonsColor(R.color.themeDef_BookmarkActivity_accent)
                            .image(R.drawable.ic_perm_lock)
                            .possiblePermissions(perms)
                            .neededPermissions(perms)
                            .title("Give me permissions")
                            .description("I can't work without them")
                            .build(),
                    new MessageButtonBehaviour(v -> showMessage("Thanks! You are already done!"), "Grant Permissions"));
        }

        addSlide(new Tos());
        addSlide(new BASwitcher());

    }

}
